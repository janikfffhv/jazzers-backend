plugins {
    id 'java'
    id 'war'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    // Shared Library
    maven { url 'https://jitpack.io' }
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    // Postgres
    implementation 'org.postgresql:postgresql:42.3.3'
    // JPA
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    // Hibernate
    implementation 'org.hibernate:hibernate-core:5.6.7.Final'
    // Shared Library
    implementation 'com.github.Rhokkar:jazzers-shared:main-SNAPSHOT'
    // ActiveMQ
    implementation 'org.apache.activemq:activemq-all:5.17.0'
    // Log4J
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    // Enterprise Java Beans
    implementation 'javax.ejb:javax.ejb-api:3.2.2'
    // Contexts and Dependency Injection
    implementation 'javax.enterprise:cdi-api:2.0.SP1'
    // JAX-RS
    implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
    // OpenAPI (for OAS - might be optional)
    implementation 'org.eclipse.microprofile.openapi:microprofile-openapi-api:3.0'

    // H2
    testImplementation 'com.h2database:h2:2.1.210'
    // Mockito
    testImplementation 'org.mockito:mockito-core:4.4.0'
    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes 'Main-Class': 'at.fhv.jazzers.backend.Server'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

test {
    useJUnitPlatform()
}